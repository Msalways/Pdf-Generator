/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SignupIndexRouteImport } from './routes/Signup/index'
import { Route as LoginIndexRouteImport } from './routes/Login/index'
import { Route as ReportLayoutRouteImport } from './routes/Report/_layout'
import { Route as ReportLayoutIndexRouteImport } from './routes/Report/_layout/index'

const ReportRouteImport = createFileRoute('/Report')()

const ReportRoute = ReportRouteImport.update({
  id: '/Report',
  path: '/Report',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupIndexRoute = SignupIndexRouteImport.update({
  id: '/Signup/',
  path: '/Signup/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/Login/',
  path: '/Login/',
  getParentRoute: () => rootRouteImport,
} as any)
const ReportLayoutRoute = ReportLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => ReportRoute,
} as any)
const ReportLayoutIndexRoute = ReportLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ReportLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/Report': typeof ReportLayoutRouteWithChildren
  '/Login': typeof LoginIndexRoute
  '/Signup': typeof SignupIndexRoute
  '/Report/': typeof ReportLayoutIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/Report': typeof ReportLayoutIndexRoute
  '/Login': typeof LoginIndexRoute
  '/Signup': typeof SignupIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/Report': typeof ReportRouteWithChildren
  '/Report/_layout': typeof ReportLayoutRouteWithChildren
  '/Login/': typeof LoginIndexRoute
  '/Signup/': typeof SignupIndexRoute
  '/Report/_layout/': typeof ReportLayoutIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/Report' | '/Login' | '/Signup' | '/Report/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/Report' | '/Login' | '/Signup'
  id:
    | '__root__'
    | '/'
    | '/Report'
    | '/Report/_layout'
    | '/Login/'
    | '/Signup/'
    | '/Report/_layout/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ReportRoute: typeof ReportRouteWithChildren
  LoginIndexRoute: typeof LoginIndexRoute
  SignupIndexRoute: typeof SignupIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/Report': {
      id: '/Report'
      path: '/Report'
      fullPath: '/Report'
      preLoaderRoute: typeof ReportRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Signup/': {
      id: '/Signup/'
      path: '/Signup'
      fullPath: '/Signup'
      preLoaderRoute: typeof SignupIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Login/': {
      id: '/Login/'
      path: '/Login'
      fullPath: '/Login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Report/_layout': {
      id: '/Report/_layout'
      path: '/Report'
      fullPath: '/Report'
      preLoaderRoute: typeof ReportLayoutRouteImport
      parentRoute: typeof ReportRoute
    }
    '/Report/_layout/': {
      id: '/Report/_layout/'
      path: '/'
      fullPath: '/Report/'
      preLoaderRoute: typeof ReportLayoutIndexRouteImport
      parentRoute: typeof ReportLayoutRoute
    }
  }
}

interface ReportLayoutRouteChildren {
  ReportLayoutIndexRoute: typeof ReportLayoutIndexRoute
}

const ReportLayoutRouteChildren: ReportLayoutRouteChildren = {
  ReportLayoutIndexRoute: ReportLayoutIndexRoute,
}

const ReportLayoutRouteWithChildren = ReportLayoutRoute._addFileChildren(
  ReportLayoutRouteChildren,
)

interface ReportRouteChildren {
  ReportLayoutRoute: typeof ReportLayoutRouteWithChildren
}

const ReportRouteChildren: ReportRouteChildren = {
  ReportLayoutRoute: ReportLayoutRouteWithChildren,
}

const ReportRouteWithChildren =
  ReportRoute._addFileChildren(ReportRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ReportRoute: ReportRouteWithChildren,
  LoginIndexRoute: LoginIndexRoute,
  SignupIndexRoute: SignupIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
